{"version":3,"sources":["components/Register.js"],"names":["Register","history","useHistory","useForm","register","errors","handleSubmit","watch","password","useRef","current","className","id","onSubmit","e","preventDefault","type","name","ref","required","pattern","value","message","placeholder","email","minLength","validate","confirm_password","onClick","registro","$","val","auth","createUserWithEmailAndPassword","then","a","user","db","collection","doc","streamer","update","registry","push","catch","error"],"mappings":"0OA6FeA,UApFE,WACb,IAAIC,EAAUC,cADK,EAE8BC,YAAQ,IAAjDC,EAFW,EAEXA,SAAUC,EAFC,EAEDA,OAAQC,EAFP,EAEOA,aAAcC,EAFrB,EAEqBA,MAClCC,EAAWC,iBAAO,IAsBxB,OArBAD,EAASE,QAAUH,EAAM,WAAY,IAsBjC,qCACI,oBAAII,UAAU,4BAAd,yBACA,uBAAMC,GAAG,gBAAgBC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAA1C,UACI,uBACIJ,UAAU,oCACVC,GAAG,iBACHI,KAAK,QACLC,KAAK,QACLC,IAAKd,EAAS,CACVe,SAAS,6BACTC,QAAS,CACLC,MAAO,aACPC,QAAS,2BAGjBC,YAAY,QACZJ,SAAS,aAEZd,EAAOmB,OAAS,mBAAGb,UAAU,QAAb,SAAsBN,EAAOmB,MAAMF,UAEpD,uBACIX,UAAU,oCACVC,GAAG,oBACHI,KAAK,WACLC,KAAK,WACLC,IAAKd,EAAS,CACVe,SAAU,sCACVM,UAAW,CACPJ,MAAO,EACPC,QAAS,6DAGjBC,YAAY,kBAEflB,EAAOG,UAAY,mBAAGG,UAAU,QAAb,SAAsBN,EAAOG,SAASc,UAE1D,uBACIX,UAAU,oCACVC,GAAG,4BACHI,KAAK,WACLC,KAAK,mBACLC,IAAKd,EAAS,CACVsB,SAAU,SAAAL,GAAK,OACXA,IAAUb,EAASE,SAAW,qCAEtCa,YAAY,4BAEflB,EAAOsB,kBAAoB,mBAAGhB,UAAU,QAAb,SAAsBN,EAAOsB,iBAAiBL,UAE1E,gCACI,wBAAQM,QAAStB,GAtEjC,WACI,IAAIuB,EAAW,GACfA,EAASL,MAAQM,IAAE,mBAAmBC,MACtCF,EAASrB,SAAWsB,IAAE,sBAAsBC,MAE5CC,IAAKC,+BAA+BJ,EAASL,MAAOK,EAASrB,UAC5D0B,KADD,+BAAAC,EAAA,MACM,WAAMC,GAAN,SAAAD,EAAA,sEACIE,IAAGC,WAAW,SACnBC,IAAIC,KACJC,OAAO,CACJC,UAAU,IAJZ,OAMFzC,EAAQ0C,KAAK,SANX,2CADN,uDASCC,OAAM,SAACC,GACJ5C,EAAQ0C,KAAK,kBAuDuC3B,KAAK,SAASL,UAAU,wBAAwBC,GAAG,kBAA/F,yBACA,wBAAQgB,QAAS,kBAAM3B,EAAQ0C,KAAK,MAAMhC,UAAU,6BAApD","file":"static/js/11.3f908591.chunk.js","sourcesContent":["import './Register.scss'\r\nimport $ from 'jquery';\r\nimport { useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { db } from './resources/Firebase';\r\nimport { auth } from './resources/Firebase';\r\nimport { streamer } from './resources/Config';\r\n\r\nconst Register = () => {\r\n    let history = useHistory();\r\n    const { register, errors, handleSubmit, watch} = useForm({});\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    function registrarse() {\r\n        var registro = {}\r\n        registro.email = $('#registro-email').val()\r\n        registro.password = $('#registro-password').val()\r\n        \r\n        auth.createUserWithEmailAndPassword(registro.email, registro.password)\r\n        .then(async(user) => {\r\n            await db.collection(\"users\")\r\n            .doc(streamer)\r\n            .update({\r\n                registry: true\r\n            })\r\n            history.push('admin')\r\n        })\r\n        .catch((error) => {\r\n            history.push('register')\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4 className=\"text-light titulo-h4 mt-4\">Registrarse</h4>\r\n            <form id=\"form-register\" onSubmit={e => e.preventDefault()}>\r\n                <input\r\n                    className=\"form-control form-control-sm mt-2\"\r\n                    id=\"registro-email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    ref={register({\r\n                        required:'Debes especificar un email',\r\n                        pattern: {\r\n                            value: /^\\S+@\\S+$/i,\r\n                            message: 'No es un email valido'\r\n                        }\r\n                    })}\r\n                    placeholder=\"Email\"\r\n                    required=\"required\"\r\n                />\r\n                {errors.email && <p className=\"eForm\">{errors.email.message}</p>}\r\n                \r\n                <input\r\n                    className=\"form-control form-control-sm mt-2\"\r\n                    id=\"registro-password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    ref={register({\r\n                        required: \"Debes especificar una contraseña\",\r\n                        minLength: {\r\n                            value: 8,\r\n                            message: \"La contraseña debe tener como mínimo 8 caracteres\"\r\n                        }\r\n                    })}\r\n                    placeholder=\"Contraseña\"\r\n                />\r\n                {errors.password && <p className=\"eForm\">{errors.password.message}</p>}\r\n\r\n                <input\r\n                    className=\"form-control form-control-sm mt-2\"\r\n                    id=\"registro-confirm-password\"\r\n                    type=\"password\"\r\n                    name=\"confirm_password\"\r\n                    ref={register({\r\n                        validate: value =>\r\n                            value === password.current || \"Las contraseñas no coinciden\"\r\n                    })}\r\n                    placeholder=\"Confirmar contraseña\"\r\n                />\r\n                {errors.confirm_password && <p className=\"eForm\">{errors.confirm_password.message}</p>}\r\n\r\n                <div>\r\n                    <button onClick={handleSubmit(registrarse)} type=\"submit\" className=\"btn btn-1 btn-sm mt-2\" id=\"registry-submit\">Registrarse</button>\r\n                    <button onClick={() => history.push('/')} className=\"btn btn-2 btn-sm mt-2 ml-2\">Volver</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register;"],"sourceRoot":""}